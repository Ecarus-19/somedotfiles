#
# lfrc
#


# Basic settings

set autoquit true
set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set sortby name
set ignorecase true
set period 1
set mouse true
set ratios '1:2'

set sixel true
#set icons

#set previewer ~/.config/lf/lf_kitty_preview
#set cleaner ~/.config/lf/lf_kitty_clean

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id


# cmd/funcions

cmd bulkrename $vidir

cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd extract ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    printf "%s\n\t" "$fx"
    printf "extract?[y/N]"
    read ans
    [ $ans = "y" ] && {
        case $fx in
            *.tar.bz2)   tar xjf $fx     ;;
            *.tar.gz)    tar xzf $fx     ;;
            *.bz2)       bunzip2 $fx     ;;
            *.rar)       unrar e $fx     ;;
            *.gz)        gunzip $fx      ;;
            *.tar)       tar xf $fx      ;;
            *.tbz2)      tar xjf $fx     ;;
            *.tgz)       tar xzf $fx     ;;
            *.zip)       unzip $fx       ;;
            *.Z)         uncompress $fx  ;;
            *.7z)        7z x $fx        ;;
            *.tar.xz)    tar xf $fx      ;;
        esac
    }
}}

cmd mkdir $mkdir -p "$@"

cmd delete ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    printf "%s\n\t" "$fx"
    printf "delete?[y/N]"
    read ans
    [ $ans = "y" ] && rm -rf -- $fx
}}

#cmd trash ${{
#    clear; tput cup $(($(tput lines)/3)); tput bold
#    set -f
#    printf "%s\n\t" "$fx"
#    printf "sent to trash?[y/N]"
#    read ans
#    [ $ans = "y" ] && trash-put -- $fx
#}}

cmd on-select &{{
    lf -remote "send $id set statfmt \"$(eza -lbdg --total-size --time-style long-iso --color=always "$f")\""
}}

# Bindings

# some Defaults i care

map <enter> shell

# execute current file (must be executable)
map x $$f
map X !$f

map o &mimeopen $f
map O $mimeopen --ask $f

map E extract

map q quit

map k up
map j down
map h updir
map l open
map <up> up
map <down> down
map <left> updir
map <right> open

map <c-b> page-up
map <c-f> page-down

map <pgup> page-up
map <pgdn> page-down

map gg top
map G bottom
map <home> top
map <end> bottom

map J bottom
map K top

# redraw the select item
map <c-l> redraw

# reload the current dir?
map <c-r> reload

map f find
map / search

map v invert
map u unselect
map C clear

map DD delete
map p paste
map y copy
map x cut

#map Dd trash
#map dr restore-trash

# Comb

map zh set hidden!
map zr set reverse!
map zn set info
map zs set info size
map zt set info time
map za set info size:time
map sn :set sortby natural; set info
map ss :set sortby size; set size
map st :set sortby time; set time
map sa :set sortby atime; set atime
map sc :set sortby ctime; set ctime
map se :set sortby ext; set info
map <space> :toggle; down

# Rename

map A :rename; cmd-end # at the very end
map c push A<c-u> # new rename
map I :rename; cmd-home # at the very beginning
map i :rename # before extension
map a :rename; cmd-right # after extension
map B bulkrename

# unmaping {H,M,L} {high,middle,low}

map H
map M
map L

# Shortcuts

map gd cd ~/Documents
map gD cd ~/Downloads
map gp cd ~/Pictures
map gc cd ~/.config
map gM cd /mnt
map gs cd ~/.local/bin
map gh cd ~
map gT cd ~/.local/share/Trash/files
